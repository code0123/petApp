{"version":3,"sources":["../../src/pages/forgot-pass/forgot-pass.module.ts","../../src/pages/forgot-pass/forgot-pass.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACD;AAU/C;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QARhC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAc;aACf;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,oEAAc,CAAC;aACzC;SACF,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZS;AAC0B;AACX;AACT;AACS;AAEzD,IAAM,WAAW,GAAG,sEAAsE,CAAC;AAO3F;IAME,wBAAmB,OAAsB,EAAS,SAAoB,EAAU,SAA0B,EAAS,YAA0B;QAA1H,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,cAAS,GAAT,SAAS,CAAiB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAF7I,iBAAY,GAAY,KAAK,CAAC;QAG5B,IAAI,CAAC,SAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAE7F,IAAI,CAAC,cAAc,GAAG,IAAI,iEAAS,CAAC;YAClC,KAAK,EAAE,IAAI,CAAC,SAAS;SACtB,CAAC,CAAC;IACL,CAAC;IAED,6CAAoB,GAApB;QAAA,iBAmCC;QAlCC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,aAAG;gBAC/C,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,2BAA2B;oBACpC,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,QAAQ;iBACnB,CAAC,CAAC;gBAEH,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE/B,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;gBACV,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,GAAG,CAAC,OAAO;oBACpB,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,QAAQ;iBACnB,CAAC,CAAC;gBAEH,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;QACL,CAAC;QAAA,IAAI,CAAC,CAAC;YACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,uBAAuB;gBAChC,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,QAAQ;aACnB,CAAC,CAAC;YAEH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;IACH,CAAC;IAjDU,cAAc;QAJ1B,wEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;WACG;SAChC,CAAC;uBAO6I;OANlI,cAAc,CAkD1B;IAAD,CAAC;AAAA;SAlDY,cAAc,gB","file":"54.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ForgotPassPage } from './forgot-pass';\n\n@NgModule({\n  declarations: [\n    ForgotPassPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ForgotPassPage),\n  ],\n})\nexport class ForgotPassPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgot-pass/forgot-pass.module.ts","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { ToastController } from 'ionic-angular';\nimport { AuthProvider } from '../../providers/auth/auth';\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n@IonicPage()\n@Component({\n  selector: 'page-forgot-pass',\n  templateUrl: 'forgot-pass.html',\n})\nexport class ForgotPassPage {\n  email: string;\n  emailCtrl: FormControl;\n  forgotPassForm: FormGroup;\n  isSubmitting: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private toastCtrl: ToastController, public authProvider: AuthProvider) {\n    this.emailCtrl = new FormControl('', [Validators.required, Validators.pattern(EMAIL_REGEX)]);\n\n    this.forgotPassForm = new FormGroup({\n      email: this.emailCtrl,\n    });\n  }\n\n  forgotPasswordSubmit() {\n    this.isSubmitting = true;\n    if (this.forgotPassForm.valid) {\n      this.authProvider.forgotPass(this.email).then(res => {\n        this.isSubmitting = false;\n        let toast = this.toastCtrl.create({\n          message: 'Password reset email sent',\n          duration: 5000,\n          position: 'bottom'\n        });\n\n        this.email = '';\n        this.navCtrl.push('LoginPage');\n\n        toast.present();\n      }).catch(err => {\n        this.isSubmitting = false;\n        let toast = this.toastCtrl.create({\n          message: err.message,\n          duration: 5000,\n          position: 'bottom'\n        });\n\n        toast.present();\n      });\n    }else {\n      this.isSubmitting = false;\n      let toast = this.toastCtrl.create({\n        message: 'Invalid email address',\n        duration: 4000,\n        position: 'bottom'\n      });\n\n      toast.present();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgot-pass/forgot-pass.ts"],"sourceRoot":""}